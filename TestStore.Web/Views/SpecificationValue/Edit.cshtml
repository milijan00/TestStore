@using TestStore.Application.Dto;
@model EditSpecficationValueDto;
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<section class="container mx-auto py-3">
    <article>
        <h1>Edit a  specification value.</h1>
     </article>
     <article >
        <form action="#" method="POST" name="editSpecificationValueForm">
            <section class="row">
                <article class="col-12 mb-3">
                    <select  class="form-control" id="specificationId">
                        @foreach(var s in Model.Specifications){
                            @if(s.Id == Model.Dto.SpecificationId){
                                <option value="@s.Id" selected>@s.Name</option>
                            }else {
                                <option value="@s.Id">@s.Name</option>
                            }
                        }
                    </select>
                </article>
                <article class="col-12 mb-3">
                    <input type="hidden" value="@Model.Dto.Value" id="oldSpecificationValue"/> 
                    <input class="form-control" placeholder="Enter specification value" value="@Model.Dto.Value" id="specificationValue"/>
                    <div id="specificationValueError" class="alert alert-danger my-2 d-none">
                        <p></p>
                    </div>
                </article>
                <article class="col-12 mb-3">
                    <input class="btn btn-primary" type="submit" value="Submit" />
                </article>
            </section>
        </form> 
     </article>
</section>
<section class="container mx-auto d-flex justify-content-end align-items-end pt-3">
    <div class="toast" specification="alert" aria-live="assertive" aria-atomic="true">
      <div class="toast-header">
        <strong class="mr-auto">Edit specification</strong>
      </div>
      <div class="toast-body">
         You have edited a specification. 
      </div>
    </div>
</section>
<script type="module">
    import validation from "/js/validation.js";
    import {showToast} from "/js/toast.js";

    document.editSpecificationValueForm.addEventListener("submit", function(e){
        e.preventDefault();
        validation.hideErrorBlocks(["#specificationValueError"]);
        var result = {
            errors : {},
            isValid : true
        };
        if(!specificationValue.value){
            result.errors.specificationValue = "Specification value is required.";
            result.isValid = false;
        }
        if(result.isValid){
            $.ajax({
                url : "http://localhost:5257/specificationvalue/update",
                data : {
                    value : oldSpecificationValue.value,
                    newValue : specificationValue.value,
                    specificationId : specificationId.value
                },
                method : "PUT",
                success : function(result){
                    showToast();
                },
                error : function(e){
                    console.error(e);
                }
            })
        }else {
            validation.displayErrorMessages(result.errors);
        }
    });
</script>
